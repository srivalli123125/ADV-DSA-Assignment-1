class Node {
    constructor(data) {
        this.data = data;
        this.next = null;
    }
}

function deleteZeroSum(head) {
    let current = head;
    let sum = 0;
    const sumSet = new Set();
    let dummy = new Node(0);
    dummy.next = head;
    let prefixSum = 0;

    while (current) {
        prefixSum += current.data;

        if (sumSet.has(prefixSum)) {
            let temp = sumSet[prefixSum].next;
            let tempSum = prefixSum + temp.data;

            while (temp !== current) {
                sumSet.delete(tempSum);
                temp = temp.next;
                tempSum += temp.data;
            }

            sumSet[prefixSum].next = current.next;
        } else {
            sumSet[prefixSum] = current;
        }

        current = current.next;
    }

    return dummy.next;
}
function printLinkedList(head) {
    let current = head;
    while (current) {
        console.log(current.data);
        current = current.next;
    }
}

// Example usage
const head = new Node(3);
head.next = new Node(4);
head.next.next = new Node(-7);
head.next.next.next = new Node(5);
head.next.next.next.next = new Node(-6);

console.log("Original Linked List:");
printLinkedList(head);

const newHead = deleteZeroSum(head);

console.log("\nLinked List after Deleting Elements with Zero Sum:");
printLinkedList(newHead);
