class Node {
    constructor(data) {
        this.data = data;
        this.next = null;
    }
}

function mergeAlternate(head1, head2) {
    let current1 = head1;
    let current2 = head2;

    while (current1 && current2) {
        let temp1 = current1.next;
        let temp2 = current2.next;

        current1.next = current2;
        current2.next = temp1;

        current1 = temp1;
        current2 = temp2;
    }

    return head1;
}
const head1 = new Node(1);
head1.next = new Node(2);
head1.next.next = new Node(3);

const head2 = new Node(4);
head2.next = new Node(5);
head2.next.next = new Node(6);

console.log("Linked List 1:");
printLinkedList(head1);
console.log("\nLinked List 2:");
printLinkedList(head2);

const mergedHead = mergeAlternate(head1, head2);

console.log("\nLinked List after Merging at Alternate Positions:");
printLinkedList(mergedHead);
